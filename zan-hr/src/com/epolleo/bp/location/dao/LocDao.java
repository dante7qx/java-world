/**
 * This file was generated by Data Model Tool
 * See <a href="http://www.hna.net/dmt/schema">http://www.hna.net/dmt/schema</a>
 *
 * Copyright (c) 2012 epolleo.com
 * All rights reserved.
 * LocDao.java
 * Date: 2012-10-23
 */
package com.epolleo.bp.location.dao;

import java.io.Serializable;
import java.util.List;

import com.epolleo.bp.location.bean.LocBean;
import com.epolleo.bp.pub.AbstractDao;
import com.epolleo.bp.pub.PagingForm;
import com.epolleo.bp.pub.PagingResult;

/**
 * <p>
 * 地理区域表的数据访问类
 * </p>
 * 
 * Date: 2012-10-23 下午02:05:04
 * 
 * @author TODO
 * @version 1.0
 */
public class LocDao extends AbstractDao<LocBean> {

    /**
     * @param entity
     *            新增地理区域表对象
     * @return 新增成功的地理区域表
     * @see LocBean
     */
    @Override
    public LocBean save(LocBean entity) {
        return save("insertLoc", entity);
    }

    /**
     * @param entityId
     *            待删除地理区域表的关键值（比如主键Key）
     * @return 如果删除成功，返回1
     */
    @Override
    public int delete(Serializable entityId) {
        return delete("deleteLoc", entityId);
    }

    /**
     * @param entity
     *            修改地理区域表对象
     * @return 如果修改成功，返回1
     * @see LocBean
     */
    @Override
    public int update(LocBean entity) {
        return update("updateLoc", entity);
    }

    /**
     * @param pagingForm
     *            分页及查询过滤参数
     * @return 指定页及条件的查询结果
     * @see PagingForm
     */
    @Override
    public PagingResult<LocBean> findPaging(PagingForm pagingForm,
        boolean fuzzy) {
        return findPaging("queryLocPage", pagingForm, fuzzy);
    }

    /**
     * @return 查询地理区域表的所有记录
     * @see LocBean
     */
    @Override
    public List<LocBean> findAll() {
        return findAll("queryLocList");
    }

    /**
     * @return 返回指定关键值（比如主键Key）的地理区域表
     * @see LocBean
     */
    @Override
    public LocBean find(Serializable id) {
        return find("queryLocById", id);
    }

    public LocBean getLocByIdcId(String idcId) {
        LocBean result = (LocBean) getSqlMapClientTemplate().queryForFirst(
            "queryLocByIdcId", idcId);
        return result;
    }
    
    @SuppressWarnings("unchecked")
    public List<LocBean> queryLocDict(){
        return getSqlMapClientTemplate().queryForList("queryLocDict");
    }

	@SuppressWarnings("unchecked")
	public List<LocBean> queryEnableLoc() {
        return getSqlMapClientTemplate().queryForList("queryEnableLoc");
	}
}