/**
 * This file was generated by Data Model Tool
 * See <a href="http://www.hna.net/dmt/schema">http://www.hna.net/dmt/schema</a>
 *
 * Copyright (c) 2012 epolleo.com
 * All rights reserved.
 * AnnounceInfoDao.java
 * Date: 2013-01-24
 */
package com.epolleo.bp.announce.dao.ibatis;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;

import com.epolleo.bp.menu.bean.Menu;
import com.epolleo.bp.pub.AbstractDao;
import com.epolleo.bp.pub.LoginUser;
import com.epolleo.bp.pub.PagingForm;
import com.epolleo.bp.pub.PagingResult;
import com.epolleo.bp.seq.bean.IdKind;
import com.epolleo.bp.seq.dao.SeqDao;
import com.epolleo.bp.announce.bean.AnnounceInfoBean;

/**
 * <p>
 * 通告信息的数据访问类
 * </p>
 * 
 * Date: 2013-01-24 下午07:10:55
 * 
 * @author TODO
 * @version 1.0
 */
public class AnnounceInfoDao extends AbstractDao<AnnounceInfoBean> {

    @Resource
    private SeqDao seqDao;

    /**
     * @param entity
     *            新增通告信息对象
     * @return 新增成功的通告信息
     * @see AnnounceInfoBean
     */
    @Override
    public AnnounceInfoBean save(AnnounceInfoBean entity) {
        return save("insertAnnounceInfo", entity);
    }

    /**
     * @param entityId
     *            待删除通告信息的关键值（比如主键Key）
     * @return 如果删除成功，返回1
     */
    @Override
    public int delete(Serializable entityId) {
        return delete("deleteAnnounceInfo", entityId);
    }

    /**
     * @param entity
     *            修改通告信息对象
     * @return 如果修改成功，返回1
     * @see AnnounceInfoBean
     */
    @Override
    public int update(AnnounceInfoBean entity) {
        return update("updateAnnounceInfo", entity);
    }

    /**
     * @param pagingForm
     *            分页及查询过滤参数
     * @return 指定页及条件的查询结果
     * @see PagingForm
     */
    @Override
    public PagingResult<AnnounceInfoBean> findPaging(PagingForm pagingForm, boolean fuzzy) {
        return findPaging("queryAnnounceInfoPage", pagingForm, fuzzy);
    }

    // 查询前100条
    public PagingResult<AnnounceInfoBean> findTop100Paging(PagingForm pagingForm, boolean fuzzy) {
        return findPaging("queryAnnounceInfoTop100Page", pagingForm, fuzzy);
    }

    /**
     * @return 查询通告信息的所有记录
     * @see AnnounceInfoBean
     */
    @Override
    public List<AnnounceInfoBean> findAll() {
        return findAll("queryAnnounceInfoList");
    }

    /**
     * @return 返回指定关键值（比如主键Key）的通告信息
     * @see AnnounceInfoBean
     */
    @Override
    public AnnounceInfoBean find(Serializable id) {
        return find("queryAnnounceInfoById", id);
    }

    public AnnounceInfoBean saveNotify(AnnounceInfoBean entity) {
        long notifyid = seqDao.getNewId(IdKind.AnnounceId);
        entity.setId(notifyid);
        return save("insertNotify", entity);
    }

    public AnnounceInfoBean findNotify(Serializable id) {
        return find("queryNotifyById", id);
    }

    public int updateNotify(AnnounceInfoBean entity) {
        return update("updateNotify", entity);
    }

    @SuppressWarnings("unchecked")
    public List<AnnounceInfoBean> getAllNotifyForCurrentUser() {
        return (List<AnnounceInfoBean>) getSqlMapClientTemplate().queryForList("getAllNotifyByTime", new Date());
    }

    public PagingResult<AnnounceInfoBean> queryAnnounceInfoByUserRole(PagingForm pagingForm, boolean fuzzy) {
        return findPaging("queryAnnounceInfoByUserRole", pagingForm, fuzzy);
    }
}
