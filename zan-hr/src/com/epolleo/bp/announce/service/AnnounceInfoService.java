/**
 * This file was generated by Data Model Tool
 * See <a href="http://www.hna.net/dmt/schema">http://www.hna.net/dmt/schema</a>
 *
 * Copyright (c) 2012 epolleo.com
 * All rights reserved.
 * AnnounceInfoService.java
 * Date: 2013-01-24
 */
package com.epolleo.bp.announce.service;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import com.epolleo.bp.pub.AbstractService;
import com.epolleo.bp.pub.LoginUser;
import com.epolleo.bp.pub.PagingForm;
import com.epolleo.bp.pub.PagingResult;
import com.epolleo.bp.seq.bean.IdKind;
import com.epolleo.bp.seq.service.SeqService;
import com.epolleo.bp.announce.dao.ibatis.AnnounceInfoDao;
import com.epolleo.bp.announce.bean.AnnounceInfoBean;

/**
 * <p>
 * 通告信息的业务类
 * </p>
 * 
 * Date: 2013-01-24 下午07:10:55
 * 
 * @author Data Model Tool
 * @version 1.0
 */
public class AnnounceInfoService extends AbstractService<AnnounceInfoBean, AnnounceInfoDao> {

    @Resource
    private SeqService seqService;

    @Resource
    public void setDao(AnnounceInfoDao dao) {
        this.dao = dao;
    }

    @Override
    public PagingResult<AnnounceInfoBean> findPaging(PagingForm pagingForm) {
        return dao.findPaging(pagingForm, false);
    }

    // 查询前100条
    public PagingResult<AnnounceInfoBean> findTop100Paging(PagingForm pagingForm) {
        return dao.findTop100Paging(pagingForm, false);
    }

    public List<AnnounceInfoBean> getAllNotifyForCurrentUser() {
        return dao.getAllNotifyForCurrentUser();
    }

    @Deprecated
    public void addNewNotify(String contents, Date effDate, Date expDate, String updateBy, String funcIds, String url,
        String orgCodes) {
        addNewNotify(effDate, expDate, updateBy, funcIds, url, orgCodes, contents);
    }

    public void addNewNotify(Date effDate, Date expDate, String updateBy, String funcIds, String url, String orgCodes,
        String... contents) {
        AnnounceInfoBean nb = new AnnounceInfoBean();
        StringBuffer sb = new StringBuffer();
        for (String s : contents) {
            if (sb.length() > 0) {
                sb.append("<br>");
            }
            sb.append(s);
        }
        nb.setContent(sb.toString());
        nb.setEffDate(effDate);
        nb.setExpDate(expDate);
        nb.setUpdateBy(updateBy);
        nb.setUpdateDate(new Date());
        nb.setFuncIds(funcIds);
        nb.setUrl(url);
        nb.setOrgCodes(orgCodes);
        nb.setState(0);
        this.dao.saveNotify(nb);
    }

    public void addNewNotify(String funcIds, String url, String orgCodes, String... contents) {
        addNewNotify(new Date(), null, LoginUser.getCurrentUser().getUserId(), funcIds, url, orgCodes, contents);
    }

    public PagingResult<AnnounceInfoBean> queryAnnounceInfoByUserRole(PagingForm pagingForm) {
        return dao.queryAnnounceInfoByUserRole(pagingForm, false);
    }
}