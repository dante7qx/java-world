/**
 * This file was generated by Data Model Tool
 * See <a href="http://www.hna.net/dmt/schema">http://www.hna.net/dmt/schema</a>
 *
 * Copyright (c) 2012 hnair.com
 * All rights reserved.
 * ForumTopicDao.java
 * Date: 2012-10-19
 */
package com.epolleo.bp.forum.dao.ibatis;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import com.epolleo.bp.pub.AbstractDao;
import com.epolleo.bp.pub.PagingForm;
import com.epolleo.bp.pub.PagingResult;
import com.epolleo.bp.pub.LoginUser;

import com.epolleo.bp.forum.bean.ForumTopicBean;

/**
 * <p>论坛主题的数据访问类</p>
 * 
 * Date: 2012-10-19 上午09:36:55
 * 
 * @author Data Model Tool
 * @version 1.0
 */
public class ForumTopicDao extends AbstractDao<ForumTopicBean> {

    /**
     * @param entity 新增论坛主题对象
     * @return 新增成功的论坛主题
     * @see ForumTopicBean
     */
    @Override
    public ForumTopicBean save(ForumTopicBean entity) {
        LoginUser lguser = com.epolleo.bp.pub.LoginUser.getCurrentUser();
        entity.setCreaterId(lguser.getUserId());
        entity.setCreaterName(lguser.getUserName());
        entity.setCreateTime(new Date());
        return save("insertForumTopic", entity);
    }

    /**
     * @param entityId 待删除论坛主题的关键值（比如主键Key）
     * @return 如果删除成功，返回1
     */
    @Override
    public int delete(Serializable entityId) {
        return delete("deleteForumTopic", entityId);
    }

    /**
     * @param entity 修改论坛主题对象
     * @return 如果修改成功，返回1
     * @see ForumTopicBean
     */
    @Override
    public int update(ForumTopicBean entity) {
        return update("updateForumTopic", entity);
    }

    /**
     * @param pagingForm 分页及查询过滤参数
     * @return 指定页及条件的查询结果
     * @see PagingForm
     */
    @Override
    public PagingResult<ForumTopicBean> findPaging(PagingForm pagingParam, boolean fuzzy) {
        return findPaging("queryForumTopicPage", pagingParam, fuzzy);

    }

    /**
     * @return 查询论坛主题的所有记录
     * @see ForumTopicBean
     */
    @Override
    public List<ForumTopicBean> findAll() {
        return findAll("queryForumTopicList");
    }

    /**
     * @return 返回指定关键值（比如主键Key）的论坛主题
     * @see ForumTopicBean
     */
    @Override
    public ForumTopicBean find(Serializable id) {
        return find("queryForumTopicById", id);
    }
    
    public int updateFatherNotleaf(ForumTopicBean entity) {
        return update("updateFatherNotleaf", entity);
    }
    public int updateRootReplyCount(ForumTopicBean entity) {
        return update("updateRootReplyCount", entity);
    }
    public int updateRootReplyCountReal(ForumTopicBean entity) {
        return update("updateRootReplyCountReal", entity);
    }
    
    public int updateFatherleaf(ForumTopicBean entity) {
        return update("updateFatherleaf", entity);
    }
    public ForumTopicBean findChild(Serializable id) {
        return find("queryChildbyId", id);
    }
    public int queryTotalCount(ForumTopicBean entity) {
        return (Integer)getSqlMapClientTemplate().queryForObject("queryTotalCount", entity);
    }
    public int queryTotalReply(ForumTopicBean entity) {
        return (Integer)getSqlMapClientTemplate().queryForObject("queryTotalReply", entity);
    }
    public PagingResult<ForumTopicBean> searchPaging(PagingForm pagingParam, boolean fuzzy) {
        return findPaging("searchForumTopicPage", pagingParam, fuzzy);

    }    
}